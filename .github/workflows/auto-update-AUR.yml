name: With TAG

# Controls when the workflow will run
on:
  schedule:
    - cron:  '30 2 * * *'
    
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Install Dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install \
          libarchive-dev \
          git 
          sudo python3 -m pip install meson
          sudo python3 -m pip install ninja
      
      - name: install-pacman
        shell: bash
        env:
          PACMAN_VERSION: 6.0.1
        run: |
          sudo git clone --depth 1 https://gitlab.manjaro.org/packages/core/pacman.git
          pushd pacman
            sudo wget https://sources.archlinux.org/other/pacman/pacman-${PACMAN_VERSION}.tar.xz
            sudo tar -xvf pacman-${PACMAN_VERSION}.tar.xz
            pushd pacman-${PACMAN_VERSION}
              sudo patch -p1 -i ../pacman-sync-first-option.patch
              sudo meson --prefix=/usr \
                        --buildtype=plain \
                        -Ddoc=disabled \
                        -Ddoxygen=enabled \
                        -Dscriptlet-shell=/usr/bin/bash \
                        -Dldconfig=/usr/bin/ldconfig \
                        build
              sudo meson compile -C build
              sudo meson install -C build
            popd
            sudo install -m644 pacman.conf /etc/pacman.conf
            sudo install -m644 makepkg.conf /etc/
            sudo mkdir -p /etc/pacman.d
            sudo touch /etc/pacman.d/mirrorlist
          popd
            
      - name: Configure SSH
        shell: bash -O extglob {0}
        run: |
          mkdir ~/.ssh/
          echo 'Host aur.archlinux.org
          IdentityFile ~/.ssh/aur
          User aur' >> ~/.ssh/config
          echo "${{ secrets.SSH_AUR }}" >  ~/.ssh/aur
          chmod 500 ~/.ssh/aur
          ssh-keyscan -t ecdsa aur.archlinux.org,95.216.144.15 > ~/.ssh/known_hosts
          
      - name: Version AUR vs GIT
        shell: bash
        run: |
          for i in $(cat lista-with-tag); do
            #AUR PKGBUILD
            git clone ssh://aur@aur.archlinux.org/${i}.git -l aur-$i
            cd aur-$i
            source PKGBUILD
            cd ..
            
            #GIT ORIGEN 
            git clone ${url}.git -l git-$i
            cd git-${pkgname}
            vertaggit=$(git tag | sort | tail -n1)
            cd ..
            
            #CHANGE pkgver=
            if [ "${pkgver}" != "${vertaggit}" ]; then
              cd aur-$i
              sed -i "s/pkgver=.*/pkgver=${vertaggit}/" PKGBUILD
              makepkg --printsrcinfo > .SRCINFO
              git add PKGBUILD .SRCINFO
              git config --global user.email "${{ secrets.AUR_PUSH_EMAIL }}"
              git config --global user.name "${{ secrets.AUR_PUSH_USER }}"
              git commit -m "version ${vertaggit}"
              git push
            fi
          done
            
      # # Tmate ##
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3 
            
            
